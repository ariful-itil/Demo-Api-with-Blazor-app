// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace Rms.Models;

[Index("AGEXIDNO", Name = "IX_Remittance_AgexIdNo")]
[Index("AGEXIDNO", "SerialNo", Name = "IX_Remittance_Beneficiary")]
[Index("RemittanceNo", Name = "IX_Remittance_RemittanceNo")]
[Index("RespondingBranch", "DateofPayment", "IssuePaymentCode", Name = "IX_Remittance_ResBr_IPayCode")]
[Index("RespondingBranch", "Status", Name = "IX_Remittance_RespondingBr_Status")]
[Index("RespondingBranch", "RemittanceNo", Name = "IX_Remittance_RespondingBranch")]
[Index("RespondingBranch", Name = "IX_Remittance_RespondingBranch_only")]
[Index("Status", "RemittanceNo", Name = "IX_Remittance_Status")]
[Index("TransDate", Name = "IX_Remittance_TransDate")]
[Index("IssuingBranch", "RemittanceNo", "RemittanceType", Name = "IX_Remittance_Unique_RemittanceNo", IsUnique = true)]
[Index("UserId", Name = "IX_Remittance_User")]
[Index("UserId", Name = "nci_wi_Remittance_0AFE6C33-663C-491F-AFBD-6643F2E042ED")]
[Index("IssuingBranch", "TransDate", Name = "nci_wi_Remittance_201DA319E9E5F880BBCD")]
[Index("Status", "DateofPayment", "IssuePaymentCode", "PaymentType", Name = "nci_wi_Remittance_39C1E6EFD6E9985FBCB6")]
[Index("AGEXIDNO", "TransDate", Name = "nci_wi_Remittance_D11DDF404B97E64D5837")]
[Index("Status", Name = "nci_wi_Remittance_F9D75B1F80367E440611")]
public partial class Remittance
{
    [Required]
    [StringLength(10)]
    [Unicode(false)]
    public string IssuingBranch { get; set; }

    [Required]
    [StringLength(15)]
    [Unicode(false)]
    public string RemittanceNo { get; set; }

    [Required]
    [StringLength(10)]
    [Unicode(false)]
    public string RemittanceType { get; set; }

    public DateOnly TransDate { get; set; }

    [Required]
    [StringLength(15)]
    [Unicode(false)]
    public string AGEXIDNO { get; set; }

    public short SerialNo { get; set; }

    [Column(TypeName = "decimal(18, 2)")]
    public decimal Amount { get; set; }

    [Column(TypeName = "decimal(10, 4)")]
    public decimal ExchangeRate { get; set; }

    [Column(TypeName = "decimal(18, 0)")]
    public decimal FAmount { get; set; }

    [Column(TypeName = "decimal(10, 2)")]
    public decimal Commission { get; set; }

    [Column(TypeName = "decimal(8, 2)")]
    public decimal VAT { get; set; }

    [Required]
    [StringLength(10)]
    [Unicode(false)]
    public string IssuePaymentCode { get; set; }

    [StringLength(10)]
    [Unicode(false)]
    public string TransactionMode { get; set; }

    [Required]
    [StringLength(10)]
    [Unicode(false)]
    public string RespondingBranch { get; set; }

    [StringLength(10)]
    [Unicode(false)]
    public string PaymentType { get; set; }

    public bool? Payment { get; set; }

    public DateOnly? DateofPayment { get; set; }

    [StringLength(30)]
    [Unicode(false)]
    public string PaymentBy { get; set; }

    [StringLength(20)]
    [Unicode(false)]
    public string AdviceNo { get; set; }

    [Required]
    [StringLength(10)]
    [Unicode(false)]
    public string CurrencyCode { get; set; }

    [Required]
    [StringLength(10)]
    [Unicode(false)]
    public string DrawingCurrency { get; set; }

    [StringLength(10)]
    [Unicode(false)]
    public string Status { get; set; }

    [Column(TypeName = "smalldatetime")]
    public DateTime? FirstVerifiedDate { get; set; }

    [StringLength(30)]
    [Unicode(false)]
    public string FirstVerifiedBy { get; set; }

    [Column(TypeName = "smalldatetime")]
    public DateTime? SecondVerifiedDate { get; set; }

    [StringLength(30)]
    [Unicode(false)]
    public string SecondVerifiedBy { get; set; }

    public bool? StopPayment { get; set; }

    [StringLength(100)]
    [Unicode(false)]
    public string StopPayReason { get; set; }

    [StringLength(100)]
    [Unicode(false)]
    public string StopPaymentBy { get; set; }

    public DateOnly? StopPaymentDate { get; set; }

    [StringLength(20)]
    [Unicode(false)]
    public string SecurityCode { get; set; }

    [StringLength(15)]
    [Unicode(false)]
    public string TestKey { get; set; }

    [StringLength(10)]
    [Unicode(false)]
    public string RuleViolation { get; set; }

    [StringLength(200)]
    [Unicode(false)]
    public string Remarks { get; set; }

    [StringLength(20)]
    [Unicode(false)]
    public string PhotoIdType { get; set; }

    [StringLength(20)]
    [Unicode(false)]
    public string PhotoIdNumber { get; set; }

    [StringLength(50)]
    [Unicode(false)]
    public string RemittancePurpose { get; set; }

    [StringLength(200)]
    [Unicode(false)]
    public string ThirdPartyInfo { get; set; }

    public byte? RiskScore { get; set; }

    [Required]
    [StringLength(30)]
    [Unicode(false)]
    public string UserId { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime LastUpdate { get; set; }

    [Key]
    public long IdentityNo { get; set; }

    public int? RiskScoreBk { get; set; }

    [ForeignKey("IssuingBranch")]
    [InverseProperty("RemittanceIssuingBranchNavigation")]
    public virtual BranchInfo IssuingBranchNavigation { get; set; }

    [ForeignKey("RespondingBranch")]
    [InverseProperty("RemittanceRespondingBranchNavigation")]
    public virtual BranchInfo RespondingBranchNavigation { get; set; }
}